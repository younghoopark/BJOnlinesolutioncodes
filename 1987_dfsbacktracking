#include <iostream>
#include <vector>
using namespace std;

#define MAX(a,b) a > b ? a : b

int R, C;
int ans = 1;
int cnt = 1;
int map[20][20];
bool visited[26];
int udlr[4][2] = { {-1,0}, {1,0}, {0,-1}, {0,1} };

void dfs(int r, int c)
{
	int idx = map[r][c];
	visited[idx] = true;
	for (int i = 0; i < 4; i++)
	{
		int newr = r + udlr[i][0];
		int newc = c + udlr[i][1];
		if (newr >= 0 && newr < R && newc >= 0 && newc < C)
		{
			int next = map[newr][newc];
			if (!visited[next])
			{
				cnt++;
				ans = MAX(cnt, ans);
				dfs(newr, newc);
			}
		}
	}
	visited[idx] = false;
	cnt--;
}
int main()
{
	cin >> R >> C;
	int i, j;
	getchar();
	for (i = 0; i < R; i++)
	{
		for (j = 0; j < C; j++)
		{
			scanf("%1c", &map[i][j]);
			map[i][j] = map[i][j] - 'A';
		}
		getchar();
	}

	
	dfs(0, 0);
	cout << ans << endl;
	return 0;
}
